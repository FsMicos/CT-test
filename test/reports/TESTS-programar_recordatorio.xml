<testsuite name="programar_recordatorio.Recordatorio automatizado" tests="3" errors="0" failures="3" skipped="0" time="0.003005" timestamp="2025-07-21T19:29:37.256163" hostname="LAPTOP-PFG6TTJS"><testcase classname="programar_recordatorio.Recordatorio automatizado" name="Recordatorio de intercambio sin confirmar -- @1.1 " status="failed" time="0.001003"><failure type="AssertionError" message="">
<![CDATA[
Failing step: Y que el acuerdo tiene estado pendiente ... failed in 0.001s
Location: test/features/programar_recordatorio.feature:18
Traceback (most recent call last):
  File "C:\Users\Michael\Ct-test\Lib\site-packages\behave\model.py", line 1329, in run
    match.run(runner.context)
  File "C:\Users\Michael\Ct-test\Lib\site-packages\behave\matchers.py", line 98, in run
    self.func(context, *args, **kwargs)
  File "test\features\steps\programar_recordatorio.py", line 40, in step_impl
    assert context.acuerdo.getEstado() == "Pendiente"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError
]]>
</failure><system-out>
<![CDATA[
@scenario.begin
  Esquema del escenario: Recordatorio de intercambio sin confirmar -- @1.1 
    Dado que dos estudiantes han acordado un intercambio ... passed in 0.000s
      | nombre | libro              |
      | Juana  | El poder del ahora |
      | Pedro  | El camino          |
    Y que el acuerdo tiene estado pendiente ... failed in 0.001s
    Y que faltan 5 días para la fecha del intercambio ... skipped in 0.000s
    Cuando se genera un recordatorio para ese intercambio ... skipped in 0.000s
    Entonces el recordatorio debe tener un nivel de urgencia BAJO ... skipped in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="programar_recordatorio.Recordatorio automatizado" name="Recordatorio de intercambio sin confirmar -- @1.2 " status="failed" time="0.001001"><failure type="AssertionError" message="">
<![CDATA[
Failing step: Y que el acuerdo tiene estado pendiente ... failed in 0.000s
Location: test/features/programar_recordatorio.feature:18
Traceback (most recent call last):
  File "C:\Users\Michael\Ct-test\Lib\site-packages\behave\model.py", line 1329, in run
    match.run(runner.context)
  File "C:\Users\Michael\Ct-test\Lib\site-packages\behave\matchers.py", line 98, in run
    self.func(context, *args, **kwargs)
  File "test\features\steps\programar_recordatorio.py", line 40, in step_impl
    assert context.acuerdo.getEstado() == "Pendiente"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError
]]>
</failure><system-out>
<![CDATA[
@scenario.begin
  Esquema del escenario: Recordatorio de intercambio sin confirmar -- @1.2 
    Dado que dos estudiantes han acordado un intercambio ... passed in 0.001s
      | nombre | libro              |
      | Juana  | El poder del ahora |
      | Pedro  | El camino          |
    Y que el acuerdo tiene estado pendiente ... failed in 0.000s
    Y que faltan 3 días para la fecha del intercambio ... skipped in 0.000s
    Cuando se genera un recordatorio para ese intercambio ... skipped in 0.000s
    Entonces el recordatorio debe tener un nivel de urgencia MEDIO ... skipped in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="programar_recordatorio.Recordatorio automatizado" name="Recordatorio de intercambio sin confirmar -- @1.3 " status="failed" time="0.001001"><failure type="AssertionError" message="">
<![CDATA[
Failing step: Y que el acuerdo tiene estado pendiente ... failed in 0.001s
Location: test/features/programar_recordatorio.feature:18
Traceback (most recent call last):
  File "C:\Users\Michael\Ct-test\Lib\site-packages\behave\model.py", line 1329, in run
    match.run(runner.context)
  File "C:\Users\Michael\Ct-test\Lib\site-packages\behave\matchers.py", line 98, in run
    self.func(context, *args, **kwargs)
  File "test\features\steps\programar_recordatorio.py", line 40, in step_impl
    assert context.acuerdo.getEstado() == "Pendiente"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError
]]>
</failure><system-out>
<![CDATA[
@scenario.begin
  Esquema del escenario: Recordatorio de intercambio sin confirmar -- @1.3 
    Dado que dos estudiantes han acordado un intercambio ... passed in 0.000s
      | nombre | libro              |
      | Juana  | El poder del ahora |
      | Pedro  | El camino          |
    Y que el acuerdo tiene estado pendiente ... failed in 0.001s
    Y que faltan 2 días para la fecha del intercambio ... skipped in 0.000s
    Cuando se genera un recordatorio para ese intercambio ... skipped in 0.000s
    Entonces el recordatorio debe tener un nivel de urgencia ALTO ... skipped in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase></testsuite>